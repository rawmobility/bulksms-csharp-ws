// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace apps.rawmobility.com {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="SendSMSPort", Namespace="http://webservice.gateway.blender.rawmobility.com/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(batchMessage))]
    public partial class SendSMSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendBatchMultiOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendBatchSingleOperationCompleted;
        
        public SendSMSService() {
            this.Url = "http://10.147.27.49:8080/gateway/ws/sendsms";
        }
        
        public SendSMSService(string url) {
            this.Url = url;
        }
        
        public event sendSmsCompletedEventHandler sendSmsCompleted;
        
        public event sendBatchMultiCompletedEventHandler sendBatchMultiCompleted;
        
        public event sendBatchSingleCompletedEventHandler sendBatchSingleCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gateway.blender.rawmobility.com/", ResponseNamespace="http://webservice.gateway.blender.rawmobility.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchMessageMultiBody sendSms([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string originator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string recipients, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string text, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string routeId) {
            object[] results = this.Invoke("sendSms", new object[] {
                        username,
                        password,
                        originator,
                        recipients,
                        text,
                        routeId});
            return ((batchMessageMultiBody)(results[0]));
        }
        
        public System.IAsyncResult BeginsendSms(string username, string password, string originator, string recipients, string text, string routeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendSms", new object[] {
                        username,
                        password,
                        originator,
                        recipients,
                        text,
                        routeId}, callback, asyncState);
        }
        
        public batchMessageMultiBody EndsendSms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((batchMessageMultiBody)(results[0]));
        }
        
        public void sendSmsAsync(string username, string password, string originator, string recipients, string text, string routeId) {
            this.sendSmsAsync(username, password, originator, recipients, text, routeId, null);
        }
        
        public void sendSmsAsync(string username, string password, string originator, string recipients, string text, string routeId, object userState) {
            if ((this.sendSmsOperationCompleted == null)) {
                this.sendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSmsCompleted);
            }
            this.InvokeAsync("sendSms", new object[] {
                        username,
                        password,
                        originator,
                        recipients,
                        text,
                        routeId}, this.sendSmsOperationCompleted, userState);
        }
        
        private void OnsendSmsCompleted(object arg) {
            if ((this.sendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSmsCompleted(this, new sendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gateway.blender.rawmobility.com/", ResponseNamespace="http://webservice.gateway.blender.rawmobility.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchMessageMultiBody sendBatchMulti([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] batchMessageMultiBody arg2) {
            object[] results = this.Invoke("sendBatchMulti", new object[] {
                        username,
                        password,
                        arg2});
            return ((batchMessageMultiBody)(results[0]));
        }
        
        public System.IAsyncResult BeginsendBatchMulti(string username, string password, batchMessageMultiBody arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendBatchMulti", new object[] {
                        username,
                        password,
                        arg2}, callback, asyncState);
        }
        
        public batchMessageMultiBody EndsendBatchMulti(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((batchMessageMultiBody)(results[0]));
        }
        
        public void sendBatchMultiAsync(string username, string password, batchMessageMultiBody arg2) {
            this.sendBatchMultiAsync(username, password, arg2, null);
        }
        
        public void sendBatchMultiAsync(string username, string password, batchMessageMultiBody arg2, object userState) {
            if ((this.sendBatchMultiOperationCompleted == null)) {
                this.sendBatchMultiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendBatchMultiCompleted);
            }
            this.InvokeAsync("sendBatchMulti", new object[] {
                        username,
                        password,
                        arg2}, this.sendBatchMultiOperationCompleted, userState);
        }
        
        private void OnsendBatchMultiCompleted(object arg) {
            if ((this.sendBatchMultiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendBatchMultiCompleted(this, new sendBatchMultiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.gateway.blender.rawmobility.com/", ResponseNamespace="http://webservice.gateway.blender.rawmobility.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchMessageSingleBody sendBatchSingle([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] batchMessageSingleBody arg2) {
            object[] results = this.Invoke("sendBatchSingle", new object[] {
                        username,
                        password,
                        arg2});
            return ((batchMessageSingleBody)(results[0]));
        }
        
        public System.IAsyncResult BeginsendBatchSingle(string username, string password, batchMessageSingleBody arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendBatchSingle", new object[] {
                        username,
                        password,
                        arg2}, callback, asyncState);
        }
        
        public batchMessageSingleBody EndsendBatchSingle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((batchMessageSingleBody)(results[0]));
        }
        
        public void sendBatchSingleAsync(string username, string password, batchMessageSingleBody arg2) {
            this.sendBatchSingleAsync(username, password, arg2, null);
        }
        
        public void sendBatchSingleAsync(string username, string password, batchMessageSingleBody arg2, object userState) {
            if ((this.sendBatchSingleOperationCompleted == null)) {
                this.sendBatchSingleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendBatchSingleCompleted);
            }
            this.InvokeAsync("sendBatchSingle", new object[] {
                        username,
                        password,
                        arg2}, this.sendBatchSingleOperationCompleted, userState);
        }
        
        private void OnsendBatchSingleCompleted(object arg) {
            if ((this.sendBatchSingleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendBatchSingleCompleted(this, new sendBatchSingleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gateway.blender.rawmobility.com/")]
    public partial class batchMessageMultiBody : batchMessage {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItem(ElementName="recipient", IsNullable=false, Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchRecipientMultiBody[] recipients;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gateway.blender.rawmobility.com/")]
    public partial class batchRecipientMultiBody {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string body;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string originator;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recipient;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reference;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routeId;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gateway.blender.rawmobility.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(batchMessageMultiBody))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(batchMessageSingleBody))]
    public partial class batchMessage {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string body;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string creatingUserId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime deliverySchedule;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool deliveryScheduleSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryScheduleDestinationTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryTimeZone;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool detailedResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool filterOptouts;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int messageSpread;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string originator;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool processOnDelivery;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routeId;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gateway.blender.rawmobility.com/")]
    public partial class batchMessageSingleBody : batchMessage {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool filterDuplicaets;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItem(ElementName="recipient", IsNullable=false, Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchRecipientSingleBody[] recipients;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gateway.blender.rawmobility.com/")]
    public partial class batchRecipientSingleBody {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recipient;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public batchMessageRecipientType type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool typeSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.gateway.blender.rawmobility.com/")]
    public enum batchMessageRecipientType {
        
        /// <remarks/>
        CONTACT,
        
        /// <remarks/>
        MAILINGLIST,
        
        /// <remarks/>
        MSISDN,
    }
    
    public partial class sendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public batchMessageMultiBody Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((batchMessageMultiBody)(this.results[0]));
            }
        }
    }
    
    public delegate void sendSmsCompletedEventHandler(object sender, sendSmsCompletedEventArgs args);
    
    public partial class sendBatchMultiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendBatchMultiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public batchMessageMultiBody Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((batchMessageMultiBody)(this.results[0]));
            }
        }
    }
    
    public delegate void sendBatchMultiCompletedEventHandler(object sender, sendBatchMultiCompletedEventArgs args);
    
    public partial class sendBatchSingleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendBatchSingleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public batchMessageSingleBody Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((batchMessageSingleBody)(this.results[0]));
            }
        }
    }
    
    public delegate void sendBatchSingleCompletedEventHandler(object sender, sendBatchSingleCompletedEventArgs args);
}
